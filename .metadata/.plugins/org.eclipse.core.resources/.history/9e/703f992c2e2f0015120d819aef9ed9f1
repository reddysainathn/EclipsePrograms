package synchronisedKeyWord5;

public class SynchronisedKeyWord {

	private volatile int count = 0;

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		SynchronisedKeyWord sync = new SynchronisedKeyWord();
		sync.doWork();

	}

	public void doWork() {

		Thread t1 = new Thread(new Runnable() {

			@Override
			public void run() {
				for (int i = 0; i < 10000; i++) {
					count++;
				}

			}

		});
		Thread t2 = new Thread(new Runnable() {

			@Override
			public void run() {
				for (int i = 0; i < 10000; i++) {
					count++;
				}

			}

		});

		t1.start();
		t2.start();

		// Join() will wait and return until the Thread is finished
		try {
			t1.join();
			t2.join();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		System.out.println("Count is :" + count);
	}

}