package DeadLock12;

import java.util.Random;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Runner {

	private Account acc1 = new Account();
	private Account acc2 = new Account();

	private Lock lock1 = new ReentrantLock();
	private Lock lock2 = new ReentrantLock();

	public void firstStage() throws InterruptedException {
		Random random = new Random();
		for (int i = 0; i < 10000; i++) {

			Account.transfer(acc1, acc2, random.nextInt(100));
		}

	}

	public void secondStage() throws InterruptedException {
		Random random = new Random();
		for (int i = 0; i < 10000; i++) {

			Account.transfer(acc2, acc1, random.nextInt(100));
		}

	}

	public void finished() {

		System.out.println("Account-1 Balance :" + acc1.getBalance());
		System.out.println("Account-2 Balance :" + acc2.getBalance());
		System.out.println("Total Balance :"
				+ (acc1.getBalance() + acc2.getBalance()));
	}
}
